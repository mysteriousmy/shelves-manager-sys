// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using shelves_manager_sys.Entity.Context;

namespace shelves_manager_sys.Migrations
{
    [DbContext(typeof(ShelvesDbContext))]
    [Migration("20220506033800_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("shelves_manager_sys.Entity.Admins", b =>
                {
                    b.Property<int>("adminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("adminName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("adminPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("adminRole")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<bool>("autoLogin")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime");

                    b.HasKey("adminId");

                    b.ToTable("admins");
                });

            modelBuilder.Entity("shelves_manager_sys.Entity.Cargos", b =>
                {
                    b.Property<int>("cargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cargoName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("cargoId");

                    b.ToTable("cargos");
                });

            modelBuilder.Entity("shelves_manager_sys.Entity.OutCargos", b =>
                {
                    b.Property<int>("outCargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cargoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime");

                    b.Property<int>("tagId")
                        .HasColumnType("int");

                    b.HasKey("outCargoId");

                    b.HasIndex("cargoId")
                        .IsUnique();

                    b.HasIndex("tagId")
                        .IsUnique();

                    b.ToTable("outCargos");
                });

            modelBuilder.Entity("shelves_manager_sys.Entity.PutCargos", b =>
                {
                    b.Property<int>("putCargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cargoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("tagId")
                        .HasColumnType("int");

                    b.HasKey("putCargoId");

                    b.HasIndex("cargoId")
                        .IsUnique();

                    b.HasIndex("tagId")
                        .IsUnique();

                    b.ToTable("putCargos");
                });

            modelBuilder.Entity("shelves_manager_sys.Entity.Shelves", b =>
                {
                    b.Property<int>("shelveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("isOnline")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("shelveName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("shelveId");

                    b.ToTable("shelves");
                });

            modelBuilder.Entity("shelves_manager_sys.Entity.ShelvesCargos", b =>
                {
                    b.Property<int>("recordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cargoId")
                        .HasColumnType("int");

                    b.Property<bool>("isUse")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("layer")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<int>("shelveId")
                        .HasColumnType("int");

                    b.HasKey("recordId");

                    b.HasIndex("cargoId")
                        .IsUnique();

                    b.HasIndex("shelveId")
                        .IsUnique();

                    b.ToTable("shelvesCargos");
                });

            modelBuilder.Entity("shelves_manager_sys.Entity.Tags", b =>
                {
                    b.Property<int>("tgaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("tagCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("tgaId");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("shelves_manager_sys.Entity.OutCargos", b =>
                {
                    b.HasOne("shelves_manager_sys.Entity.Cargos", "cargos")
                        .WithOne("outCargos")
                        .HasForeignKey("shelves_manager_sys.Entity.OutCargos", "cargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("shelves_manager_sys.Entity.Tags", "tags")
                        .WithOne("outCargos")
                        .HasForeignKey("shelves_manager_sys.Entity.OutCargos", "tagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cargos");

                    b.Navigation("tags");
                });

            modelBuilder.Entity("shelves_manager_sys.Entity.PutCargos", b =>
                {
                    b.HasOne("shelves_manager_sys.Entity.Cargos", "cargos")
                        .WithOne("putCargos")
                        .HasForeignKey("shelves_manager_sys.Entity.PutCargos", "cargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("shelves_manager_sys.Entity.Tags", "tags")
                        .WithOne("putCargos")
                        .HasForeignKey("shelves_manager_sys.Entity.PutCargos", "tagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cargos");

                    b.Navigation("tags");
                });

            modelBuilder.Entity("shelves_manager_sys.Entity.ShelvesCargos", b =>
                {
                    b.HasOne("shelves_manager_sys.Entity.Cargos", "cargos")
                        .WithOne("shelveCargos")
                        .HasForeignKey("shelves_manager_sys.Entity.ShelvesCargos", "cargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("shelves_manager_sys.Entity.Shelves", "shelves")
                        .WithOne("shelvesCargos")
                        .HasForeignKey("shelves_manager_sys.Entity.ShelvesCargos", "shelveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cargos");

                    b.Navigation("shelves");
                });

            modelBuilder.Entity("shelves_manager_sys.Entity.Cargos", b =>
                {
                    b.Navigation("outCargos");

                    b.Navigation("putCargos");

                    b.Navigation("shelveCargos");
                });

            modelBuilder.Entity("shelves_manager_sys.Entity.Shelves", b =>
                {
                    b.Navigation("shelvesCargos");
                });

            modelBuilder.Entity("shelves_manager_sys.Entity.Tags", b =>
                {
                    b.Navigation("outCargos");

                    b.Navigation("putCargos");
                });
#pragma warning restore 612, 618
        }
    }
}
